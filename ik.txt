< git 학습 >
(1)
1. 작업을 할 디렉토리 지정 - git init
2. 해당 경로에서 파일 생성 - ik.txt
3. 파일에 내용 작성 및 저장
4. git add {파일명}
5. git commit -m "{작업 내용 등 메세지 작성}"

(2)
1. 깃허브 계정 생성 및 레포지토리 생성
2. git remote add origin git@github.com:adventurer-ik/git-test.git
3. git branch -M main
4. git push -u origin main

(3)
git branch {생성할 브랜치 이름}

(4)
git switch / checkout
- 보통은 switch를 권장함

브랜치 생성 및 이동을 같이 하는 방법
: git switch -c {브랜치 이름}
: git checkout -b {브랜치 이름}

(5)
git merge {현재 위치한 브랜치에 합치려고 하는 "브랜치 이름"}
 
(6)
pull / push

(7)
정리
1. 브랜치 생성 및 이동
2. 기능 개발 및 코드 저장
3. 코드 업로드 및 Pull Request 생성
4. github에서 merge
5. 내 로컬에도 반영

(8)
git reset
- hard: 코드 & 커밋 모두 날라감
- soft: 코드는 그대로, 커밋만 날라감. > 변경된 코드가 git add "후" 상태로 남아있음
- mixed: 코드는 그대로, 커밋만 날라감. > 변경된 코드가 git add "전" 상태로 남아있음

:사용 권장하지 않음. 다른 팀원의 커밋기록이 꼬일 수가 있으므로 신중해야함.

(9)
git stash
- m: 커밋 메세지처럼 stash로 임시 저장할때도 메세지 남겨서 찾기 쉽게 해줌
- u: git add 된적 없는 파일들도 포함.

(10)
git revert
: git reset > 특정 커밋으로 이동
: git revert > 해당 특정 커밋으로 이동하면서 새로운 커밋 생성함

(11)
Incoming Change = 들어온 변경사항 = 다른 사람이 변경한 부분
Current Change = 현재 변경 사항 = 내가 직접 변경한 부분